//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LicencingClient.LicencingAPI {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/", ConfigurationName="LicencingAPI.DefaultSoap")]
    public interface DefaultSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/GetList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LicencingClient.LicencingAPI.Entity[] GetList(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/GetList", ReplyAction="*")]
        System.Threading.Tasks.Task<LicencingClient.LicencingAPI.Entity[]> GetListAsync(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Get", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LicencingClient.LicencingAPI.Entity Get(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Get", ReplyAction="*")]
        System.Threading.Tasks.Task<LicencingClient.LicencingAPI.Entity> GetAsync(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Put", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LicencingClient.LicencingAPI.Entity Put(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Put", ReplyAction="*")]
        System.Threading.Tasks.Task<LicencingClient.LicencingAPI.Entity> PutAsync(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/GetCustomFieldSchema", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LicencingClient.LicencingAPI.Entity GetCustomFieldSchema(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/GetCustomFieldSchema", ReplyAction="*")]
        System.Threading.Tasks.Task<LicencingClient.LicencingAPI.Entity> GetCustomFieldSchemaAsync(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/SanityCheck", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LicencingClient.LicencingAPI.Entity SanityCheck();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/SanityCheck", ReplyAction="*")]
        System.Threading.Tasks.Task<LicencingClient.LicencingAPI.Entity> SanityCheckAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Login", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Login(string name, string password, string company, string branch, string locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Login", ReplyAction="*")]
        System.Threading.Tasks.Task LoginAsync(string name, string password, string company, string branch, string locale);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Logout", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Logout();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Logout", ReplyAction="*")]
        System.Threading.Tasks.Task LogoutAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/SetBusinessDate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void SetBusinessDate(System.DateTime businessDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/SetBusinessDate", ReplyAction="*")]
        System.Threading.Tasks.Task SetBusinessDateAsync(System.DateTime businessDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/GetProcessStatus", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LicencingClient.LicencingAPI.ProcessResult GetProcessStatus(LicencingClient.LicencingAPI.InvokeResult invokeResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/GetProcessStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<LicencingClient.LicencingAPI.ProcessResult> GetProcessStatusAsync(LicencingClient.LicencingAPI.InvokeResult invokeResult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Delete", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void Delete(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Delete", ReplyAction="*")]
        System.Threading.Tasks.Task DeleteAsync(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Invoke", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LicencingClient.LicencingAPI.InvokeResult Invoke(LicencingClient.LicencingAPI.Entity entity, LicencingClient.LicencingAPI.Action action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/Invoke", ReplyAction="*")]
        System.Threading.Tasks.Task<LicencingClient.LicencingAPI.InvokeResult> InvokeAsync(LicencingClient.LicencingAPI.Entity entity, LicencingClient.LicencingAPI.Action action);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/GetFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        LicencingClient.LicencingAPI.File[] GetFiles(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/GetFiles", ReplyAction="*")]
        System.Threading.Tasks.Task<LicencingClient.LicencingAPI.File[]> GetFilesAsync(LicencingClient.LicencingAPI.Entity entity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/PutFiles", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        void PutFiles(LicencingClient.LicencingAPI.Entity entity, LicencingClient.LicencingAPI.File[] files);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.acumatica.com/entity/3/LicencingAPI/1/PutFiles", ReplyAction="*")]
        System.Threading.Tasks.Task PutFilesAsync(LicencingClient.LicencingAPI.Entity entity, LicencingClient.LicencingAPI.File[] files);
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AMLicenseSetup))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class Entity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.Guid> idField;
        
        private LongValue rowNumberField;
        
        private string noteField;
        
        private bool deleteField;
        
        private CustomField[] customFieldsField;
        
        private ReturnBehavior returnBehaviorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<System.Guid> ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LongValue RowNumber {
            get {
                return this.rowNumberField;
            }
            set {
                this.rowNumberField = value;
                this.RaisePropertyChanged("RowNumber");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Note {
            get {
                return this.noteField;
            }
            set {
                this.noteField = value;
                this.RaisePropertyChanged("Note");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Delete {
            get {
                return this.deleteField;
            }
            set {
                this.deleteField = value;
                this.RaisePropertyChanged("Delete");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public CustomField[] CustomFields {
            get {
                return this.customFieldsField;
            }
            set {
                this.customFieldsField = value;
                this.RaisePropertyChanged("CustomFields");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public ReturnBehavior ReturnBehavior {
            get {
                return this.returnBehaviorField;
            }
            set {
                this.returnBehaviorField = value;
                this.RaisePropertyChanged("ReturnBehavior");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LongReturn))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LongSkip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LongSearch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class LongValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<long> valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<long> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class File : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] contentField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] Content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
                this.RaisePropertyChanged("Content");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class Action : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class ProcessResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid entityIdField;
        
        private ProcessStatus statusField;
        
        private int secondsField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid EntityId {
            get {
                return this.entityIdField;
            }
            set {
                this.entityIdField = value;
                this.RaisePropertyChanged("EntityId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ProcessStatus Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Seconds {
            get {
                return this.secondsField;
            }
            set {
                this.secondsField = value;
                this.RaisePropertyChanged("Seconds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum ProcessStatus {
        
        /// <remarks/>
        NotExists,
        
        /// <remarks/>
        InProcess,
        
        /// <remarks/>
        Completed,
        
        /// <remarks/>
        Aborted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class InvokeResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Guid ticketIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.Guid TicketId {
            get {
                return this.ticketIdField;
            }
            set {
                this.ticketIdField = value;
                this.RaisePropertyChanged("TicketId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GuidReturn))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GuidSkip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GuidSearch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class GuidValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.Guid> valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<System.Guid> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class GuidReturn : GuidValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class GuidSkip : GuidValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class GuidSearch : GuidValue {
        
        private GuidCondition conditionField;
        
        private System.Guid value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GuidCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.Guid Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum GuidCondition {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        IsNull,
        
        /// <remarks/>
        IsNotNull,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DoubleReturn))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DoubleSkip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DoubleSearch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DoubleValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<double> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DoubleReturn : DoubleValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DoubleSkip : DoubleValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DoubleSearch : DoubleValue {
        
        private DoubleCondition conditionField;
        
        private System.Nullable<double> value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DoubleCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<double> Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum DoubleCondition {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        IsBetween,
        
        /// <remarks/>
        IsGreaterThan,
        
        /// <remarks/>
        IsLessThan,
        
        /// <remarks/>
        IsGreaterThanOrEqualsTo,
        
        /// <remarks/>
        IsLessThanOrEqualsTo,
        
        /// <remarks/>
        IsNull,
        
        /// <remarks/>
        IsNotNull,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ByteReturn))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ByteSkip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ByteSearch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class ByteValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<byte> valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<byte> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class ByteReturn : ByteValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class ByteSkip : ByteValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class ByteSearch : ByteValue {
        
        private ByteCondition conditionField;
        
        private System.Nullable<byte> value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ByteCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<byte> Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum ByteCondition {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        IsBetween,
        
        /// <remarks/>
        IsGreaterThan,
        
        /// <remarks/>
        IsLessThan,
        
        /// <remarks/>
        IsGreaterThanOrEqualsTo,
        
        /// <remarks/>
        IsLessThanOrEqualsTo,
        
        /// <remarks/>
        IsNull,
        
        /// <remarks/>
        IsNotNull,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShortReturn))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShortSkip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ShortSearch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class ShortValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<short> valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<short> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class ShortReturn : ShortValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class ShortSkip : ShortValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class ShortSearch : ShortValue {
        
        private ShortCondition conditionField;
        
        private short value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ShortCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public short Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum ShortCondition {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        IsBetween,
        
        /// <remarks/>
        IsGreaterThan,
        
        /// <remarks/>
        IsLessThan,
        
        /// <remarks/>
        IsGreaterThanOrEqualsTo,
        
        /// <remarks/>
        IsLessThanOrEqualsTo,
        
        /// <remarks/>
        IsNull,
        
        /// <remarks/>
        IsNotNull,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IntReturn))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IntSkip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IntSearch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class IntValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<int> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class IntReturn : IntValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class IntSkip : IntValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class IntSearch : IntValue {
        
        private IntCondition conditionField;
        
        private System.Nullable<int> value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public IntCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<int> Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum IntCondition {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        IsBetween,
        
        /// <remarks/>
        IsGreaterThan,
        
        /// <remarks/>
        IsLessThan,
        
        /// <remarks/>
        IsGreaterThanOrEqualsTo,
        
        /// <remarks/>
        IsLessThanOrEqualsTo,
        
        /// <remarks/>
        IsNull,
        
        /// <remarks/>
        IsNotNull,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BooleanReturn))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BooleanSkip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BooleanSearch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class BooleanValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<bool> valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<bool> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class BooleanReturn : BooleanValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class BooleanSkip : BooleanValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class BooleanSearch : BooleanValue {
        
        private BooleanCondition conditionField;
        
        private System.Nullable<bool> value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BooleanCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<bool> Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum BooleanCondition {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        IsNull,
        
        /// <remarks/>
        IsNotNull,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DateTimeReturn))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DateTimeSkip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DateTimeSearch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DateTimeValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<System.DateTime> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DateTimeReturn : DateTimeValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DateTimeSkip : DateTimeValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DateTimeSearch : DateTimeValue {
        
        private DateTimeCondition conditionField;
        
        private System.Nullable<System.DateTime> value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DateTimeCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<System.DateTime> Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum DateTimeCondition {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        IsBetween,
        
        /// <remarks/>
        IsGreaterThan,
        
        /// <remarks/>
        IsLessThan,
        
        /// <remarks/>
        IsGreaterThanOrEqualsTo,
        
        /// <remarks/>
        IsLessThanOrEqualsTo,
        
        /// <remarks/>
        Today,
        
        /// <remarks/>
        Overdue,
        
        /// <remarks/>
        Tomorrow,
        
        /// <remarks/>
        ThisWeek,
        
        /// <remarks/>
        ThisMonth,
        
        /// <remarks/>
        IsNull,
        
        /// <remarks/>
        IsNotNull,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DecimalReturn))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DecimalSkip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DecimalSearch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DecimalValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<decimal> valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public System.Nullable<decimal> Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DecimalReturn : DecimalValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DecimalSkip : DecimalValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class DecimalSearch : DecimalValue {
        
        private DecimalCondition conditionField;
        
        private System.Nullable<decimal> value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DecimalCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<decimal> Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum DecimalCondition {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        IsBetween,
        
        /// <remarks/>
        IsGreaterThan,
        
        /// <remarks/>
        IsLessThan,
        
        /// <remarks/>
        IsGreaterThanOrEqualsTo,
        
        /// <remarks/>
        IsLessThanOrEqualsTo,
        
        /// <remarks/>
        IsNull,
        
        /// <remarks/>
        IsNotNull,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringReturn))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringSkip))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StringSearch))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class StringValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class StringReturn : StringValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class StringSkip : StringValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class StringSearch : StringValue {
        
        private StringCondition conditionField;
        
        private string value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public StringCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum StringCondition {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        IsBetween,
        
        /// <remarks/>
        IsGreaterThan,
        
        /// <remarks/>
        IsLessThan,
        
        /// <remarks/>
        IsGreaterThanOrEqualsTo,
        
        /// <remarks/>
        IsLessThanOrEqualsTo,
        
        /// <remarks/>
        Contains,
        
        /// <remarks/>
        DoesNotContain,
        
        /// <remarks/>
        StartsWith,
        
        /// <remarks/>
        EndsWith,
        
        /// <remarks/>
        IsNull,
        
        /// <remarks/>
        IsNotNull,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomGuidField))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomDoubleField))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomByteField))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomShortField))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomLongField))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomIntField))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomBooleanField))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomDateTimeField))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomDecimalField))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomStringField))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public abstract partial class CustomField : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string viewNameField;
        
        private string fieldNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string viewName {
            get {
                return this.viewNameField;
            }
            set {
                this.viewNameField = value;
                this.RaisePropertyChanged("viewName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string fieldName {
            get {
                return this.fieldNameField;
            }
            set {
                this.fieldNameField = value;
                this.RaisePropertyChanged("fieldName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class CustomGuidField : CustomField {
        
        private GuidValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public GuidValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class CustomDoubleField : CustomField {
        
        private DoubleValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DoubleValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class CustomByteField : CustomField {
        
        private ByteValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ByteValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class CustomShortField : CustomField {
        
        private ShortValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ShortValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class CustomLongField : CustomField {
        
        private LongValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LongValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class CustomIntField : CustomField {
        
        private IntValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public IntValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class CustomBooleanField : CustomField {
        
        private BooleanValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public BooleanValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class CustomDateTimeField : CustomField {
        
        private DateTimeValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DateTimeValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class CustomDecimalField : CustomField {
        
        private DecimalValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public DecimalValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class CustomStringField : CustomField {
        
        private StringValue valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public StringValue Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class LongReturn : LongValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class LongSkip : LongValue {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class LongSearch : LongValue {
        
        private LongCondition conditionField;
        
        private System.Nullable<long> value2Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LongCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
                this.RaisePropertyChanged("Condition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public System.Nullable<long> Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum LongCondition {
        
        /// <remarks/>
        Equal,
        
        /// <remarks/>
        NotEqual,
        
        /// <remarks/>
        IsBetween,
        
        /// <remarks/>
        IsGreaterThan,
        
        /// <remarks/>
        IsLessThan,
        
        /// <remarks/>
        IsGreaterThanOrEqualsTo,
        
        /// <remarks/>
        IsLessThanOrEqualsTo,
        
        /// <remarks/>
        IsNull,
        
        /// <remarks/>
        IsNotNull,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public enum ReturnBehavior {
        
        /// <remarks/>
        Default,
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        OnlySystem,
        
        /// <remarks/>
        OnlySpecified,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2558.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.acumatica.com/entity/3/LicencingAPI/1/")]
    public partial class AMLicenseSetup : Entity {
        
        private GuidValue aCMInstallIDField;
        
        private StringValue companyNameField;
        
        private StringValue companyURLField;
        
        private DateTimeValue licenseBeginLicenseBeginField;
        
        private DateTimeValue licenseBeginLicenseEndField;
        
        private StringValue licenseIDField;
        
        private GuidValue licenseKeyField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=0)]
        public GuidValue ACMInstallID {
            get {
                return this.aCMInstallIDField;
            }
            set {
                this.aCMInstallIDField = value;
                this.RaisePropertyChanged("ACMInstallID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=1)]
        public StringValue CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
                this.RaisePropertyChanged("CompanyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=2)]
        public StringValue CompanyURL {
            get {
                return this.companyURLField;
            }
            set {
                this.companyURLField = value;
                this.RaisePropertyChanged("CompanyURL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=3)]
        public DateTimeValue LicenseBeginLicenseBegin {
            get {
                return this.licenseBeginLicenseBeginField;
            }
            set {
                this.licenseBeginLicenseBeginField = value;
                this.RaisePropertyChanged("LicenseBeginLicenseBegin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=4)]
        public DateTimeValue LicenseBeginLicenseEnd {
            get {
                return this.licenseBeginLicenseEndField;
            }
            set {
                this.licenseBeginLicenseEndField = value;
                this.RaisePropertyChanged("LicenseBeginLicenseEnd");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=5)]
        public StringValue LicenseID {
            get {
                return this.licenseIDField;
            }
            set {
                this.licenseIDField = value;
                this.RaisePropertyChanged("LicenseID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true, Order=6)]
        public GuidValue LicenseKey {
            get {
                return this.licenseKeyField;
            }
            set {
                this.licenseKeyField = value;
                this.RaisePropertyChanged("LicenseKey");
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface DefaultSoapChannel : LicencingClient.LicencingAPI.DefaultSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DefaultSoapClient : System.ServiceModel.ClientBase<LicencingClient.LicencingAPI.DefaultSoap>, LicencingClient.LicencingAPI.DefaultSoap {
        
        public DefaultSoapClient() {
        }
        
        public DefaultSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DefaultSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DefaultSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DefaultSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LicencingClient.LicencingAPI.Entity[] GetList(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.GetList(entity);
        }
        
        public System.Threading.Tasks.Task<LicencingClient.LicencingAPI.Entity[]> GetListAsync(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.GetListAsync(entity);
        }
        
        public LicencingClient.LicencingAPI.Entity Get(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.Get(entity);
        }
        
        public System.Threading.Tasks.Task<LicencingClient.LicencingAPI.Entity> GetAsync(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.GetAsync(entity);
        }
        
        public LicencingClient.LicencingAPI.Entity Put(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.Put(entity);
        }
        
        public System.Threading.Tasks.Task<LicencingClient.LicencingAPI.Entity> PutAsync(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.PutAsync(entity);
        }
        
        public LicencingClient.LicencingAPI.Entity GetCustomFieldSchema(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.GetCustomFieldSchema(entity);
        }
        
        public System.Threading.Tasks.Task<LicencingClient.LicencingAPI.Entity> GetCustomFieldSchemaAsync(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.GetCustomFieldSchemaAsync(entity);
        }
        
        public LicencingClient.LicencingAPI.Entity SanityCheck() {
            return base.Channel.SanityCheck();
        }
        
        public System.Threading.Tasks.Task<LicencingClient.LicencingAPI.Entity> SanityCheckAsync() {
            return base.Channel.SanityCheckAsync();
        }
        
        public void Login(string name, string password, string company, string branch, string locale) {
            base.Channel.Login(name, password, company, branch, locale);
        }
        
        public System.Threading.Tasks.Task LoginAsync(string name, string password, string company, string branch, string locale) {
            return base.Channel.LoginAsync(name, password, company, branch, locale);
        }
        
        public void Logout() {
            base.Channel.Logout();
        }
        
        public System.Threading.Tasks.Task LogoutAsync() {
            return base.Channel.LogoutAsync();
        }
        
        public void SetBusinessDate(System.DateTime businessDate) {
            base.Channel.SetBusinessDate(businessDate);
        }
        
        public System.Threading.Tasks.Task SetBusinessDateAsync(System.DateTime businessDate) {
            return base.Channel.SetBusinessDateAsync(businessDate);
        }
        
        public LicencingClient.LicencingAPI.ProcessResult GetProcessStatus(LicencingClient.LicencingAPI.InvokeResult invokeResult) {
            return base.Channel.GetProcessStatus(invokeResult);
        }
        
        public System.Threading.Tasks.Task<LicencingClient.LicencingAPI.ProcessResult> GetProcessStatusAsync(LicencingClient.LicencingAPI.InvokeResult invokeResult) {
            return base.Channel.GetProcessStatusAsync(invokeResult);
        }
        
        public void Delete(LicencingClient.LicencingAPI.Entity entity) {
            base.Channel.Delete(entity);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.DeleteAsync(entity);
        }
        
        public LicencingClient.LicencingAPI.InvokeResult Invoke(LicencingClient.LicencingAPI.Entity entity, LicencingClient.LicencingAPI.Action action) {
            return base.Channel.Invoke(entity, action);
        }
        
        public System.Threading.Tasks.Task<LicencingClient.LicencingAPI.InvokeResult> InvokeAsync(LicencingClient.LicencingAPI.Entity entity, LicencingClient.LicencingAPI.Action action) {
            return base.Channel.InvokeAsync(entity, action);
        }
        
        public LicencingClient.LicencingAPI.File[] GetFiles(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.GetFiles(entity);
        }
        
        public System.Threading.Tasks.Task<LicencingClient.LicencingAPI.File[]> GetFilesAsync(LicencingClient.LicencingAPI.Entity entity) {
            return base.Channel.GetFilesAsync(entity);
        }
        
        public void PutFiles(LicencingClient.LicencingAPI.Entity entity, LicencingClient.LicencingAPI.File[] files) {
            base.Channel.PutFiles(entity, files);
        }
        
        public System.Threading.Tasks.Task PutFilesAsync(LicencingClient.LicencingAPI.Entity entity, LicencingClient.LicencingAPI.File[] files) {
            return base.Channel.PutFilesAsync(entity, files);
        }
    }
}
